'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = jTabs;
/*
* jTabs --- the tabs in pure JavaScript
* repository: https://github.com/redVi/jTabs
* demo: http://redvi.github.io/jTabs
* ========================================================================== */

function jTabs(options) {
  var container = options.container,
      buttons = options.buttons,
      tabs = options.tabs,
      activeBtnClass = options.activeBtnClass,
      activeTabClass = options.activeTabClass;

  var activeIndex = 0,
      buttonIndex = void 0,
      eventBtn = void 0,
      goToTab = void 0,
      clearActiveClasses = void 0;

  /**
  * eventBtn sets event handlers for each button
  * and calls the function switching tab
  * @param  {HTMLCollection} btns returns all buttons
  * @param  {Number} index is a number of current button
  */
  eventBtn = function eventBtn(btns, index) {
    /* `click` on the each button */
    btns.addEventListener('click', function (btn) {
      btn.preventDefault();
      goToTab(index);
    });
  };

  /**
  * goToTab toggles the active class
  * @param {Number} index - the number of the button or tab
  */
  goToTab = function goToTab(index) {
    clearActiveClasses();

    /* switch classes */
    if (index >= 0 && index <= buttons.length) {
      buttons[index].classList.add(activeBtnClass);
      tabs[index].classList.add(activeTabClass);
      activeIndex = index;
    }
  };

  clearActiveClasses = function clearActiveClasses() {
    /* remove active classes from all tabs and sections */
    for (var tab = 0; tab < tabs.length; tab++) {
      tabs[tab].classList.remove(activeTabClass);
    }

    for (var button = 0; button < buttons.length; button++) {
      buttons[button].classList.remove(activeBtnClass);
    }
  };

  /**
  * buttonIndex is a number of current button
  * @type {Number}
  */
  for (buttonIndex = 0; buttonIndex < buttons.length; buttonIndex++) {
    /* get index of certain button */
    var btnNum = buttons[buttonIndex];
    eventBtn(btnNum, buttonIndex);
  }
};